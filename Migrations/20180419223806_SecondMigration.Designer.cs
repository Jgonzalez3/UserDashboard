// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using UserDashboard.Models;

namespace UserDashboard.Migrations
{
    [DbContext(typeof(UserDashboardContext))]
    [Migration("20180419223806_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("UserDashboard.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MessageId1");

                    b.Property<int?>("MessageId2");

                    b.Property<int?>("UserId1");

                    b.Property<int?>("UserId2");

                    b.Property<string>("comment");

                    b.Property<DateTime>("created_at");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("CommentId");

                    b.HasIndex("MessageId1");

                    b.HasIndex("MessageId2");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("UserDashboard.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MessageReceivedId");

                    b.Property<int>("MessageSentId");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("message");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("MessageId");

                    b.HasIndex("MessageReceivedId");

                    b.HasIndex("MessageSentId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("UserDashboard.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created_at");

                    b.Property<string>("description");

                    b.Property<string>("email");

                    b.Property<string>("firstname");

                    b.Property<string>("lastname");

                    b.Property<int>("level");

                    b.Property<string>("password");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserDashboard.Models.Comment", b =>
                {
                    b.HasOne("UserDashboard.Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MessageId1");

                    b.HasOne("UserDashboard.Models.Message", "MessageId")
                        .WithMany()
                        .HasForeignKey("MessageId2");

                    b.HasOne("UserDashboard.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.HasOne("UserDashboard.Models.User", "UserId")
                        .WithMany()
                        .HasForeignKey("UserId2");
                });

            modelBuilder.Entity("UserDashboard.Models.Message", b =>
                {
                    b.HasOne("UserDashboard.Models.User", "MessageReceived")
                        .WithMany()
                        .HasForeignKey("MessageReceivedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UserDashboard.Models.User", "MessageSent")
                        .WithMany()
                        .HasForeignKey("MessageSentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
